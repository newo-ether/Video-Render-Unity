// Kernel.compute

#pragma kernel KernelRender

#include "Renderer.hlsl"
#include "Camera.hlsl"
#include "Ray.hlsl"
#include "Film.hlsl"

// Uniform Variable
int pixelClampMin;

// Uniform Variable
int pixelClampMax;

[numthreads(30,30,1)]
void KernelRender (uint3 id : SV_DispatchThreadID)
{
    int index = (GetFilmHeight() - (int) id.y - 1) * GetFilmWidth() + (int) id.x;

    if (index > pixelClampMin && index <= pixelClampMax)
    {
        uint2 screenIndex = id.xy;
        Ray ray = CameraGetSampleRay(screenIndex);
        RayCasting(ray, screenIndex);
    }
    else
    {
        SetFilmPixel(id.xy, float4((float3) 0.0f, 1.0f));
        SetDepthPixel(id.xy, 0.0f);
    }
}
